{"version":3,"sources":["App.js","component/KeypadScreen.jsx","component/ResultScreen.jsx","serviceWorker.js","index.js"],"names":["App","onClick","button","calculate","reset","backspace","setState","result","state","checkResult","includes","replace","eval","e","slice","className","this","Component","KeypadScreen","name","props","target","ResultScreen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ff917bc.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport KeypadScreen from './component/KeypadScreen';\nimport ResultScreen from './component/ResultScreen';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n\n    this.state = {\n        result: \"\"\n    }\n}\n\nonClick = button => {\n\n    if(button === \"=\"){\n        this.calculate()\n    }\n\n    else if(button === \"AC\"){\n        this.reset()\n    }\n    else if(button === \"Del\"){\n        this.backspace()\n    }\n\n    else {\n        this.setState({\n            result: this.state.result + button\n        })\n    }\n};\n\n\ncalculate = () => {\n    var checkResult = ''\n    if(this.state.result.includes('--')){\n        checkResult = this.state.result.replace('--','+')\n    }\n\n    else {\n        checkResult = this.state.result\n    }\n\n    try {\n        this.setState({\n            // eslint-disable-next-line\n            result: (eval(checkResult) || \"\" ) + \"\"\n        })\n    } catch (e) {\n        this.setState({\n            result: \"error\"\n        })\n\n    }\n};\n\nreset = () => {\n    this.setState({\n        result: \"\"\n    })\n};\n\nbackspace = () => {\n    this.setState({\n        result: this.state.result.slice(0, -1)\n    })\n};\n\n  render(){\n    return(\n      <div>\n        <div className=\"container\">\n        <h3 className=\"centerText\">@firmnardians</h3>\n          <div className=\"cardCalculator\">\n            <ResultScreen result={this.state.result}/>\n            <KeypadScreen onClick={this.onClick}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React, { Component } from 'react'\r\n\r\nclass KeypadScreen extends Component {\r\n    render(){\r\n        return(\r\n                <div>\r\n                    <div className=\"cardFlex\">\r\n                        <button name=\"AC\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            AC\r\n                        </button>\r\n                        <button name=\"Del\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            Del\r\n                        </button>\r\n                        <button name=\"%\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            %\r\n                        </button>\r\n                        <button name=\"/\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput orangeColor\">\r\n                            รท\r\n                        </button>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"cardFlex\">\r\n                        <button name=\"7\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            7\r\n                        </button>\r\n                        <button name=\"8\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            8\r\n                        </button>\r\n                        <button name=\"9\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            9\r\n                        </button>\r\n                        <button name=\"*\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput orangeColor\">\r\n                            x\r\n                        </button>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"cardFlex\">\r\n                        <button name=\"4\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            4\r\n                        </button>\r\n                        <button name=\"5\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            5\r\n                        </button>\r\n                        <button name=\"6\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            6\r\n                        </button>\r\n                        <button name=\"-\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput orangeColor\">\r\n                            -\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"cardFlex\">\r\n                        <button name=\"1\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            1\r\n                        </button>\r\n                        <button name=\"2\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            2\r\n                        </button>\r\n                        <button name=\"3\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            3\r\n                        </button>\r\n                        <button name=\"+\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput orangeColor\">\r\n                            +\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"cardFlex\">\r\n                        <button name=\"0\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            0\r\n                        </button>\r\n                        <button name=\"(\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            (\r\n                        </button>\r\n                        <button name=\")\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput\">\r\n                            )\r\n                        </button>\r\n                        <button name=\"=\" onClick={ e => this.props.onClick(e.target.name)} className=\"btnInput orangeColor\">\r\n                            =\r\n                        </button>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KeypadScreen;","import React, { Component } from 'react'\r\n\r\nclass ResultScreen extends Component{\r\n    render(){\r\n        let {result} = this.props;\r\n        return(\r\n                <div className=\"cardNumbering\">\r\n                    <h1>{result}</h1>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultScreen;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}